{"version":3,"sources":["Square.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","click","value","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","theXorO","scoreX","scoreO","playGame","display","clickIsSquare","bind","assertThisInitialized","sq","_this2","squares","slice","setXorO","setState","setTimeout","processingOfGold","_this3","hidden","src_Square","theXorY","_this4","arr","forEach","el","_ref","toConsumableArray","b","c","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f169f7de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <div className=\"Square\" onClick={props.click}>{props.value}</div>\r\n    )\r\n}\r\n\r\nexport default Square","import React, { Component } from 'react';\nimport './App.css';\nimport './Square';\nimport Square from './Square';\n\nclass App extends Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      value: Array(9).fill(null),\n      theXorO: true,\n      scoreX: 0,\n      scoreO: 0,\n      playGame: true,\n      display: true,\n    }\n    this.clickIsSquare = this.clickIsSquare.bind(this);\n  }\n\n  setXorO() {\n   return this.state.theXorO ? 'X' : 'O';\n  }\n\n  clickIsSquare(sq) {\n    if (this.state.value[sq] !== null) return;\n    if (!this.state.playGame) return;\n    const squares = this.state.value.slice();\n        squares[sq] = this.setXorO();\n        this.setState({value: squares, theXorO: !this.state.theXorO});\n\n        setTimeout(() => { //\n          this.processingOfGold();\n        }, 50);  \n  }\n  render() {\n    \n    return (\n      <div className=\"Container\">\n        <div className=\"Main\"></div>\n        <div \n          className=\"Winner\" \n          hidden={ this.state.display }\n          >winner: {'X' === this.setXorO() ? 'O' : 'X'}\n        </div>\n\n        <div className=\"Status\"> \n          <span>Step: {this.setXorO()}</span>\n          <span>score: X-{this.state.scoreX} and O-{this.state.scoreO}</span>\n        </div>\n        <div className=\"App\">\n          <Square value={this.state.value[0]} click={() => this.clickIsSquare(0)} />\n          <Square value={this.state.value[1]} click={() => this.clickIsSquare(1)} />\n          <Square value={this.state.value[2]} click={() => this.clickIsSquare(2)} />\n        </div>\n        <div className=\"App\">\n          <Square value={this.state.value[3]} click={() => this.clickIsSquare(3)} />\n          <Square value={this.state.value[4]} click={() => this.clickIsSquare(4)} />\n          <Square value={this.state.value[5]} click={() => this.clickIsSquare(5)} />\n        </div>\n        <div className=\"App\">\n          <Square value={this.state.value[6]} click={() => this.clickIsSquare(6)} />\n          <Square value={this.state.value[7]} click={() => this.clickIsSquare(7)} />\n          <Square value={this.state.value[8]} click={() => this.clickIsSquare(8)} />\n        </div>\n      <button onClick={() => this.setState({value: Array(9).fill(null), \n          theXorY: this.setXorO(),\n          display: true,\n          playGame: true})}>-=new games=-</button>\n      </div>\n    );\n  }\n\n  processingOfGold() {\n    const arr = this.state.value;\n    const variants = ['012', '036', '048', '147', '246', '258', '345', '678', ];\n\n    variants.forEach(el => {\n      let [a, b, c] = [...el]\n      if (arr[a] !== null && arr[a] === arr[b] && arr[b] === arr[c]) {  \n        \n        if (!this.state.theXorO) {\n          this.setState({playGame: false, display: false, scoreX: this.state.scoreX + 1});\n        }\n        if (this.state.theXorO) {\n          this.setState({playGame: false, display: false, scoreO: this.state.scoreO + 1});\n        }\n      }\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}